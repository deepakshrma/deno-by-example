"use strict";(self.webpackChunkdeno_by_example_next=self.webpackChunkdeno_by_example_next||[]).push([[821],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return b}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(t),b=o,f=m["".concat(l,".").concat(b)]||m[b]||p[b]||a;return t?r.createElement(f,s(s({ref:n},c),{},{components:t})):r.createElement(f,s({ref:n},c))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1270:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={id:"03-numbers",title:"Numbers",description:"Some Gotcha in Number as it is in JavaScript.",keywords:["beginner","number","javascript","gotcha"],image:"https://source.unsplash.com/qDY9ahp0Mto/800x450"},l=void 0,u={unversionedId:"03-numbers",id:"03-numbers",title:"Numbers",description:"Some Gotcha in Number as it is in JavaScript.",source:"@site/docs/03_numbers.md",sourceDirName:".",slug:"/03-numbers",permalink:"/deno-by-example/03-numbers",editUrl:"https://github.com/deepakshrma/deno-by-example/edit/master/docs/03_numbers.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"03-numbers",title:"Numbers",description:"Some Gotcha in Number as it is in JavaScript.",keywords:["beginner","number","javascript","gotcha"],image:"https://source.unsplash.com/qDY9ahp0Mto/800x450"},sidebar:"someSidebar",previous:{title:"Lottery Game",permalink:"/deno-by-example/lottery-game"},next:{title:"Variables and Constants",permalink:"/deno-by-example/05-variables-constants"}},c={},p=[],m={toc:p};function b(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Since deno is supporting Typescript which is super-set of the JavaScript. It support all the syntax from the JavaScript. However, Deno is a more then that. It also support APIs for file reading and network and etc."),(0,a.kt)("p",null,"Here below are some examples, that explains how numbers behave in Deno","[Javascript]","."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://source.unsplash.com/qDY9ahp0Mto/800x450",alt:"Gotcha"})),(0,a.kt)("p",null,"There are some Gotcha in Number as it is in JavaScript."),(0,a.kt)("p",null,"Sample:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'function main() {\n  const num = 10;\n  const num2: number = 20; // same as above but declarative\n\n  let num3: number;\n  num3 = num + num2;\n  console.log(num3);\n\n  // num3 = num + "20" // Error, Type \'string\' is not assignable to type \'number\'\n  num3 = num + Number("20"); // No error, cast string to number\n  console.log(num3);\n\n  num3 = num + parseInt("20", 10); // same as above\n\n  console.log(num3);\n\n  let flt = 10.0;\n\n  console.log(flt === 10); // true\n\n  console.log(flt === 10.1); // false\n\n  console.log(typeof flt, typeof 10); //number number\n\n  console.log(typeof NaN, typeof Infinity, typeof -Infinity); // number number number\n\n  console.log(NaN === NaN); // false\n\n  console.log(1.2 + 1.8); // 3 NOT 3.0\n\n  console.log(1.2 + 1.8 === 3); // true\n}\nmain();\n')),(0,a.kt)("p",null,"Things to be noted as in JS, deno also has same number for int and float number. NaN, Infinity are some special NaN."),(0,a.kt)("p",null,"More:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number")),(0,a.kt)("p",null,"How to run example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"deno run examples/03_numbers.ts\n")))}b.isMDXComponent=!0}}]);