"use strict";(self.webpackChunkdeno_by_example_next=self.webpackChunkdeno_by_example_next||[]).push([[88],{3948:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(7624),s=t(2172);const o={id:"lottery-game",title:"Take input from user | Lottery Game",sidebar_label:"Lottery Game",description:"Build a CLI Lottery game app",keywords:["CLI","advanced","lottery","webpack","game"],image:"http://www.comparelotto.com/assets/Uploads/Articles/lottery-results2.jpg"},a=void 0,i={id:"lottery-game",title:"Take input from user | Lottery Game",description:"Build a CLI Lottery game app",source:"@site/docs/lottery_game.md",sourceDirName:".",slug:"/lottery-game",permalink:"/deno-by-example/lottery-game",draft:!1,unlisted:!1,editUrl:"https://github.com/deepakshrma/deno-by-example/edit/master/docs/lottery_game.md",tags:[],version:"current",frontMatter:{id:"lottery-game",title:"Take input from user | Lottery Game",sidebar_label:"Lottery Game",description:"Build a CLI Lottery game app",keywords:["CLI","advanced","lottery","webpack","game"],image:"http://www.comparelotto.com/assets/Uploads/Articles/lottery-results2.jpg"},sidebar:"someSidebar",previous:{title:"Isomorphic App",permalink:"/deno-by-example/advanced-react-ssr"},next:{title:"Numbers",permalink:"/deno-by-example/03-numbers"}},l={},d=[{value:"Taking input from user",id:"taking-input-from-user",level:2},{value:"All working examples can be found in my Github",id:"all-working-examples-can-be-found-in-my-github",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This tutorial we will build a CLI Lottery game app. For this we will use Deno's ",(0,r.jsx)(n.code,{children:"readLines"})," and Logger that i have created. If you want to learn more about Logger implementation. Please visit: ",(0,r.jsx)(n.a,{href:"https://decipher.dev/deno-by-example/advanced-logger",children:"advanced-logger"}),"."]}),"\n",(0,r.jsx)("img",{src:"http://www.comparelotto.com/assets/Uploads/Articles/lottery-results2.jpg",width:"800"}),"\n",(0,r.jsx)(n.h2,{id:"taking-input-from-user",children:"Taking input from user"}),"\n",(0,r.jsxs)(n.p,{children:["To take input, We can use stdin stream from Deno as ",(0,r.jsx)(n.code,{children:"Deno.stdin"}),". However, reading stream is very tough task ",(0,r.jsx)(n.a,{href:"https://decipher.dev/deno-by-example/advanced-readline",children:"Read My Blog"}),". We can take help from readLines function. This will read stream of bytes and return whenever it found ",(0,r.jsx)(n.code,{children:"new line chars \\n"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="lottery_game.ts" {4,5}',children:'import { readLines } from "https://deno.land/std/io/mod.ts";\n\nfunction main() {\n  const data = readLines(Deno.stdin).next();\n  console.log(data);\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Run:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"deno run examples/lottery_game.ts\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Type test and then ",(0,r.jsx)(n.strong,{children:"[ENTER]\u23ce"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Promise { <pending> }\ntest\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Here if you have noticed, ",(0,r.jsx)(n.code,{children:".next()"})," after readLines. readLines is async iterator. So to get the value you have to call ",(0,r.jsx)(n.code,{children:"next()"}),". This will return promise. To get value form it, we need to ",(0,r.jsx)(n.code,{children:"await"})," for it."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:"{4}",children:'import { readLines } from "https://deno.land/std/io/mod.ts";\n\nasync function main() {\n  const { value: input } = await readLines(Deno.stdin).next();\n  console.log("You have entered: " + input);\n}\n\nmain();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Run again.\n",(0,r.jsx)(n.strong,{children:"Output:"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"test\nYou have entered: test\n"})}),"\n",(0,r.jsx)(n.p,{children:"Let's use logger to print in color."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="lottery_game.ts"',children:'import { readLines } from "https://deno.land/std/io/mod.ts";\nimport { Logger } from "https://raw.githubusercontent.com/deepakshrma/deno_util/master/logger.ts";\n\nasync function main() {\n  const logger = new Logger();\n  const { value: input } = await readLines(Deno.stdin).next();\n  logger.info("You have entered: " + input);\n}\n\nmain();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You will see same output but in ",(0,r.jsx)(n.code,{children:"cyan"})," color. Cool!"]}),"\n",(0,r.jsxs)(n.p,{children:["So in this lottery game, We will ask user to ",(0,r.jsx)(n.code,{children:"enter a number"}),". If guessed number matches the lottery number then game will end. Else user has to enter ",(0,r.jsx)(n.code,{children:"another number"}),". This game will run till user enter lottery number."]}),"\n",(0,r.jsx)(n.admonition,{title:"Note:",type:"note",children:(0,r.jsx)(n.p,{children:"To loop, We will use do-while loop."})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="lottery_game.ts" {12-13,15}',children:'// rest of the code\n\nasync function main() {\n  const logger = new Logger();\n  let matched = false;\n  do {\n    logger.warn("Guess the number: [1-10]");\n\n    const { value } = await readLines(Deno.stdin).next();\n    logger.info("You have guessed: %d\\n", value);\n\n    const random = Math.ceil(Math.random() * 10);\n    logger.info("Lottery number: %d\\n", random);\n\n    matched = Number(value) === random;\n  } while (matched !== true);\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Output:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"Guess the number: [1-10]\n3\nYou have guessed: 3\nLottery number: 2\nGuess the number: [1-10]\n4\nYou have guessed: 4\nLottery number: 4\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Breakdown:"})}),"\n",(0,r.jsxs)(n.p,{children:["We are taking input from user. Same time we are generating number using ",(0,r.jsx)(n.code,{children:"Math.random"}),". First time, when user enter number ",(0,r.jsx)(n.code,{children:"3"}),". It does not match generated lottery number ",(0,r.jsx)(n.code,{children:"2"}),". Game asks user to enter again. Soon user enter 4, it matches the newly generated number 4. Game exit."]}),"\n",(0,r.jsxs)(n.p,{children:["Let's make it more interactive. We will add some virtual delay to show we are generating number. And user can exit game anytime while pressing ",(0,r.jsx)(n.code,{children:"q"}),". We will do some error validation too. So that user should not enter something not expected."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="lottery_game.ts" {4,9,14-18,19-25,29-30,36-44}',children:'import { readLines } from "https://deno.land/std/io/mod.ts";\nimport { Logger } from "https://raw.githubusercontent.com/deepakshrma/deno_util/master/logger.ts";\n\nconst delay = (ms = 1000) => new Promise((r) => setTimeout(r, ms));\n\nasync function main() {\n  const logger = new Logger();\n  let matched = false;\n  let LIMIT = 10;\n  do {\n    logger.warn(`Guess the number: [1-${LIMIT}], Press \'q\' to exit!`);\n    let { value: guess } = await readLines(Deno.stdin).next();\n\n    guess = guess.trim();\n    if (guess === "q") {\n      logger.info("Thanks for playing this game! xi\xe8 xie!");\n      Deno.exit(0);\n    }\n\n    guess = Number(guess);\n    if (!guess || guess < 0 || guess > LIMIT) {\n      // check for NaN, repeat\n      logger.error(`You have wrong number. Please enter number [1-${LIMIT}]\\n`);\n      continue;\n    }\n\n    logger.info("You have guessed: %d\\n", guess);\n\n    logger.warn("Generating a number...");\n    await delay();\n\n    const random = Math.ceil(Math.random() * LIMIT);\n    // logger.info("Lottery number: %d\\n", random);\n\n    // hints\n    const diff = guess - random;\n    if (diff > 0) {\n      logger.info("too high!!");\n    } else if (diff < 0) {\n      logger.info("too low!!");\n    } else {\n      matched = true;\n      logger.warn("Bingo!! You have won Zoker Lottery! Enjoy!\\n");\n    }\n  } while (matched !== true);\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(n.p,{children:"Run, You will see output like."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/deepakshrma/deno-by-example/master/static/img/lottery-game.png",alt:"lottery_game"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Breakdown:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"delay"})," is just a helping function to give delay"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"guess = guess.trim();"})," to clean up number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"guess = Number(guess);"})," to convert in number and validate it"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"await delay();"})," virtual delay for 1 second."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"too high!!"})," and ",(0,r.jsx)(n.code,{children:"too low!!"})," to just give hint"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["I was lucky enough, I will lottery in ",(0,r.jsx)(n.code,{children:"5-6 try"}),". Haha! You can make harder, by increasing LIMIT to higher number Or removing hint to the user."]}),"\n",(0,r.jsxs)(n.p,{children:["Thanks! If you like this tutorial. Please follow me, subscribe and clap for me on ",(0,r.jsx)(n.a,{href:"https://deepak-v.medium.com/",children:"https://deepak-v.medium.com/"})]}),"\n",(0,r.jsx)(n.h3,{id:"all-working-examples-can-be-found-in-my-github",children:"All working examples can be found in my Github"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/deepakshrma/deno-by-example/tree/master/examples",children:"https://github.com/deepakshrma/deno-by-example/tree/master/examples"})})]})}function m(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>i,M:()=>a});var r=t(1504);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);