(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{145:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(9),o=(n(0),n(156)),s={id:"advanced-logger",title:"Building A Super Cool Colorful Logger with Deno fmt module",sidebar_label:"Implementing Logger"},i={id:"advanced-logger",title:"Building A Super Cool Colorful Logger with Deno fmt module",description:"Logging trace is one of the basic needs of any programming language. It does not matter how good your code is unless it is not traceable and debugable. For debugging, Logging is one of the best tools. It is fast and easy to follow. If you are working on local system This could be your best mate while debugging.",source:"@site/website/advance_logger.md",permalink:"/deno-by-example/advanced-logger",editUrl:"https://github.com/deepakshrma/deno-by-example/edit/master/website/advance_logger.md",sidebar_label:"Implementing Logger",sidebar:"someSidebar",previous:{title:"Read Line by Line as Data Stream",permalink:"/deno-by-example/advanced-readline"}},l=[{value:"Prerequisites",id:"prerequisites",children:[{value:"Formatted Log in JS",id:"formatted-log-in-js",children:[]},{value:"Issues with <code>vargs</code>",id:"issues-with-vargs",children:[]},{value:"Introduction to PrintF",id:"introduction-to-printf",children:[]},{value:"According to Deno documents",id:"according-to-deno-documents",children:[]},{value:"Colors in Log",id:"colors-in-log",children:[]},{value:"Create a Basic <em>Logger</em> Class",id:"create-a-basic-logger-class",children:[]}]}],c={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Logging trace is one of the basic needs of any ",Object(o.b)("inlineCode",{parentName:"p"},"programming language"),". It does not matter how good your code is unless it is not ",Object(o.b)("inlineCode",{parentName:"p"},"traceable")," and ",Object(o.b)("inlineCode",{parentName:"p"},"debugable"),". For debugging, Logging is one of the best tools. It is ",Object(o.b)("inlineCode",{parentName:"p"},"fast")," and ",Object(o.b)("inlineCode",{parentName:"p"},"easy")," to follow. If you are working on ",Object(o.b)("inlineCode",{parentName:"p"},"local system")," This could be your best mate while ",Object(o.b)("inlineCode",{parentName:"p"},"debugging"),"."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"NICE QUOTE:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("strong",{parentName:"p"},"LOG WELL, LIVE WELL")))),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://cdn-media-1.freecodecamp.org/images/EMv0ZRmR82v5oUZ4ZNllx29LNYgqZoUwjua-",alt:"image "}))),Object(o.b)("p",null,"Here in this tutorial, I will explain. How you can build a super cool logger with just minimal code ",Object(o.b)("inlineCode",{parentName:"p"},"(a few lines of the code)"),". That is also without using any third-party tool."),Object(o.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Deno:")," Install Deno if you don't have it ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://deno.land/#installation"}),"installed")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"Basic-Typescript:")," ",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.typescriptlang.org/docs/handbook/basic-types.html"}),"basic-types"))),Object(o.b)("p",null,"Just like Nodejs/JavaScript. Logging can be done using ",Object(o.b)("inlineCode",{parentName:"p"},"console.log")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'console.log("Hello World");\n')),Object(o.b)("p",null,"Nice! However formatting log message is big pain is javascript. ",Object(o.b)("inlineCode",{parentName:"p"},"console.log")," partially implements functions like ",Object(o.b)("inlineCode",{parentName:"p"},"printf")," from ",Object(o.b)("inlineCode",{parentName:"p"},"c++")," or ",Object(o.b)("inlineCode",{parentName:"p"},"java"),". But it doesn't support all the features."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"So how we should log formatted messages?")),Object(o.b)("h3",{id:"formatted-log-in-js"},"Formatted Log in JS"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Using String template.")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{3}","{3}":!0}),'const name = "Deepak";\nconst salary = 2000;\nconsole.log(`My name is ${name} and my salary is ${salary}$`);\n\n// My name is Deepak and my salary is 2000$\n')),Object(o.b)("p",null,"Cool! But we can see for each parameter in the template, we have to give you a constant/variable. It will be hard to create variables just to log something."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Using Vargs in ",Object(o.b)("inlineCode",{parentName:"p"},"console.log"),".")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{3,7}","{3,7}":!0}),'const name = "Deepak";\nconst salary = 2000;\nconsole.log(`My name and salary are `, name, salary);\n\n// My name and salary are  Deepak 2000\n\nconst person = { name: "deepak", salary: 2000 };\nconsole.log(`Info: `, person);\n// Info:  { name: \'deepak\', salary: 2000 }\n')),Object(o.b)("p",null,"The above statement is valid in javascript. We can pass any number of ",Object(o.b)("inlineCode",{parentName:"p"},"vargs")," to ",Object(o.b)("inlineCode",{parentName:"p"},"console.log")," However, we can't arrange the message with variables. This is very useful to print anything just by separating value from comma. But this can not be used for logging something useful."),Object(o.b)("h3",{id:"issues-with-vargs"},"Issues with ",Object(o.b)("inlineCode",{parentName:"h3"},"vargs")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Unpredicted implementation"),Object(o.b)("li",{parentName:"ol"},"Error-prone")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Let's see by an example:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{3}","{3}":!0}),'const person = { name: "deepak", salary: 2000 };\nconst address = { street: "221B baker street london", zip: 20000 };\nconsole.log("Person info: " + person + " Address: " + address);\n// Person info: [object Object] Address: [object Object]\n')),Object(o.b)("p",null,"If you try to append the object with ",Object(o.b)("inlineCode",{parentName:"p"},"string")," it converts to the string which is ",Object(o.b)("inlineCode",{parentName:"p"},"[object Object]")," for object and appended."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"Solution:"))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{3-8,13}","{3-8,13}":!0}),'const person = { name: "deepak", salary: 2000 };\nconst address = { street: "221B baker street london", zip: 20000 };\nconsole.log(\n  "Person info: " +\n    JSON.stringify(person) +\n    " Address: " +\n    JSON.stringify(address)\n);\n// Person info: {"name":"deepak","salary":2000} Address: {"street":"221B baker street london","zip":20000}\n\n// Or\n\nconsole.log("Person info: ", person, " Address: ", address);\n// Person info:  { name: \'deepak\', salary: 2000 }  Address:  { street: \'221B baker street london\', zip: 20000 }\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Use Partial printf like feature in ",Object(o.b)("inlineCode",{parentName:"p"},"console.log"),".")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{3-8}","{3-8}":!0}),'const person = { name: "deepak", salary: 2000 };\nconst address = { street: "221B baker street london", zip: 20000 };\nconsole.log(\n  "Person info: name: %s salary: %d and Address: street: %s ",\n  person.name,\n  person.salary,\n  address.street\n);\n// Person info: name: deepak salary: 2000 and Address: street: 221B baker street london\n')),Object(o.b)("p",null,"Here you can see, ",Object(o.b)("inlineCode",{parentName:"p"},"console.log")," does support ",Object(o.b)("inlineCode",{parentName:"p"},"printf")," like functions. However, this is limited until ",Object(o.b)("inlineCode",{parentName:"p"},"%s")," ","[",Object(o.b)("strong",{parentName:"p"},"string"),"]",", ",Object(o.b)("inlineCode",{parentName:"p"},"%d")," ","[",Object(o.b)("strong",{parentName:"p"},"number"),"]",". Mozilla does support Precision formatting something like ",Object(o.b)("inlineCode",{parentName:"p"},"%.2f"),"."),Object(o.b)("h3",{id:"introduction-to-printf"},"Introduction to PrintF"),Object(o.b)("p",null,"Deno is highly inspired by Go. Just like Go, Deno also has ",Object(o.b)("inlineCode",{parentName:"p"},"fmt")," module in the standard library. This module/package is a combination of multiple sub-modules like ",Object(o.b)("inlineCode",{parentName:"p"},"printf"),"."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Note:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("inlineCode",{parentName:"p"},"fmt")," module is still in work-in-progress status according to developers."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Importing printf:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{1}","{1}":!0}),'import { printf } from "https://deno.land/std/fmt/printf.ts";\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Definition of printf:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"export function printf(format: string, ...args: unknown[]): void {\n  const s = sprintf(format, ...args);\n  Deno.stdout.writeSync(new TextEncoder().encode(s));\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"printf")," takes string and ",Object(o.b)("inlineCode",{parentName:"p"},"vars")," of unknown. The format is to define what the format of the string will look like. args could be anything according to the format you wanted."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Sample of printf:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),'const person = { name: "deepak", salary: 2000 };\nprintf(`Person Name: "%s" and Salary: %d\\n`, person.name, person.salary);\n\n// Person Name: "deepak" and Salary: 2000\n')),Object(o.b)("h3",{id:"according-to-deno-documents"},"According to Deno documents"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"The following verbs are supported:")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Verb"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Meaning"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"%")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"print a literal percent")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"t")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"evaluate arg as boolean, print ",Object(o.b)("inlineCode",{parentName:"td"},"true")," or ",Object(o.b)("inlineCode",{parentName:"td"},"false"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"b")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eval as number, print binary")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"c")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eval as number, print character corr. to the codePoint")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"o")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"eval as number, print octal")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"x X")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"print as hex (ff FF), treat string as list of bytes")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"e E")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"print number in scientific/exponent format 1.123123e+01")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"f F")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"print number as float with decimal point and no exponent")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"g G")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"use %e %E or %f %F depending on size of argument")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"s")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"interpolate string")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"T")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"type of arg, as returned by ",Object(o.b)("inlineCode",{parentName:"td"},"typeof"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"v")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"value of argument in 'default' format (see below)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"j")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"argument as formatted by ",Object(o.b)("inlineCode",{parentName:"td"},"JSON.stringify"))))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("em",{parentName:"strong"},"Verbs with Width and Precision"))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"%9f    width 9, default precision\n%.9f   default width, precision 9\n%8.9f  width 8, precision 9\n%8.f   width 9, precision 0\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Sample of Width and Precision:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{2}","{2}":!0}),'const person = { name: "deepak", salary: 2000.2 };\nprintf(`Person Name: "%s" and Salary: %9.2f\\n`, person.name, person.salary);\n\n// Person Name: "deepak" and Salary:   2000.20\n')),Object(o.b)("p",null,"You can write more complex examples like padding and get the value of the ",Object(o.b)("inlineCode",{parentName:"p"},"vargs")," passed to ",Object(o.b)("inlineCode",{parentName:"p"},"printf")," function."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Sample of Padding:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{5}","{5}":!0}),'const person = { name: "deepak", salary: 2000.2 };\n\n// Padding Zero\n\nprintf(`Salary: %09.2f\\n`, person.salary);\n\n// Salary: 002000.20\n')),Object(o.b)("p",null,"The conversion of ",Object(o.b)("inlineCode",{parentName:"p"},"rgb")," to ",Object(o.b)("inlineCode",{parentName:"p"},"hex")," color is so simple."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{4}","{4}":!0}),'const r = 5,\n  g = 255,\n  b = 100;\nprintf("RGB TO HEX: #%02x%02x%02x\\n", r, g, b);\n\n// RGB TO HEX: #05ff64\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"More Complex use index of ",Object(o.b)("inlineCode",{parentName:"strong"},"vargs")," values:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{3-7}","{3-7}":!0}),'const person = { name: "deepak", salary: 2000.2 };\n\nprintf(\n  "Person has salary %d, which(%[1]d) is less than average salary %d\\n",\n  person.salary,\n  4000\n);\n\n// Person has salary 2000.2, which(2000.2) is less than average salary 4000\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Read More:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://deno.land/std/fmt"}),"https://deno.land/std/fmt")))),Object(o.b)("h3",{id:"colors-in-log"},"Colors in Log"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"THE DOOR IS RED HERE THE WRITER USES THE COLOR TO EXPRESS HIS ANGER")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://pics.me.me/the-door-is-red-here-the-writer-uses-the-color-38911952.png",alt:"colors"}))),Object(o.b)("p",null,"Another issue with ",Object(o.b)("inlineCode",{parentName:"p"},"console.log"),", It does not support colors out of the box. We end-up adding libraries like ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/colors"}),"colors")," in NodeJs. The browser has some additional support for ",Object(o.b)("inlineCode",{parentName:"p"},"css")," console.log. But that will not work in NodeJs"),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Read More:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/console"}),"https://developer.mozilla.org/en-US/docs/Web/API/console")))),Object(o.b)("p",null,"Thanks to Deno's Colors module. Now we can easily color our life."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Importing colors:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import { red, yellow, gray, cyan } from "https://deno.land/std/fmt/colors.ts";\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Note:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("inlineCode",{parentName:"p"},"colors")," module also supports rgb colors"))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import { rgb8, bgRgb8, rgb24 } from "https://deno.land/std/fmt/colors.ts";\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"From Deno source:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"/** Set background color using paletted 8bit colors.\n * https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit */\nexport function bgRgb8(str: string, color: number): string {\n  return run(str, code([48, 5, clampAndTruncate(color)], 49));\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("h3",Object(a.a)({parentName:"blockquote"},{id:"now-we-have-all-the-basic-tools-lets-finish-the-logger-implementation"}),"Now, We have all the basic tools. Let's finish the Logger implementation")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://www.memesmonkey.com/images/memesmonkey/19/19d6564114a19af49a8e40e3338adb46.jpeg",alt:"Finish IT"}))),Object(o.b)("h3",{id:"create-a-basic-logger-class"},"Create a Basic ",Object(o.b)("em",{parentName:"h3"},"Logger")," Class"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Define interfaces:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{4,6-9}","{4,6-9}":!0}),'import { sprintf, printf } from "https://deno.land/std/fmt/printf.ts";\nimport { red, yellow, gray, cyan } from "https://deno.land/std/fmt/colors.ts";\n\ntype LogLevel = 0 | 1 | 2 | 3;\n\ninterface LoggerOptions {\n  level: LogLevel;\n  format?: string;\n}\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Create a constructor and define default values for log level and format:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{11,15-16,18-22}","{11,15-16,18-22}":!0}),'import { sprintf, printf } from "https://deno.land/std/fmt/printf.ts";\nimport { red, yellow, gray, cyan } from "https://deno.land/std/fmt/colors.ts";\n\ntype LogLevel = 0 | 1 | 2 | 3;\n\ninterface LoggerOptions {\n  level: LogLevel;\n  format?: string;\n}\n\nconst initialOptions = { level: 0, format: "%s\\n" };\n\nclass Logger {\n  private _level: LogLevel;\n  private _format: string;\n\n  constructor(options: LoggerOptions = initialOptions as LoggerOptions) {\n    const { level, format } = { ...initialOptions, ...options };\n    this._level = level;\n    this._format = format;\n  }\n}\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Define getter setter for level and format:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{3-17}","{3-17}":!0}),'const initialOptions = { level: 0, format: "%s\\n" };\nclass Logger {\n  private _level: LogLevel;\n  private _format: string;\n  /// rest of the code\n  get level(): LogLevel {\n    return this._level;\n  }\n  set level(_l: LogLevel) {\n    this._level = _l;\n  }\n  get format(): string {\n    return this._format;\n  }\n  set format(_f: string) {\n    this._format = _f;\n  }\n}\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Note:")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"This is to hide the definition. You can remove setters if you don't want user to modify the values."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Add basic methods:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{6-17}","{6-17}":!0}),'const initialOptions = { level: 0, format: "%s\\n" };\nclass Logger {\n  private _level: LogLevel;\n  private _format: string;\n  /// rest of the code\n  log(...messages: unknown[]) {\n    printf(gray(sprintf(this.format, ...messages)));\n  }\n  info(...messages: unknown[]) {\n    printf(cyan(sprintf(this.format, ...messages)));\n  }\n  warn(...messages: unknown[]) {\n    printf(yellow(sprintf(this.format, ...messages)));\n  }\n  error(...messages: unknown[]) {\n    printf(red(sprintf(this.format, ...messages)));\n  }\n}\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Sample Run:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import { Logger } from "./logger.ts";\n\nconst logger = new Logger({ level: 0, format: "Logger: %s" });\nlogger.log("This is log message");\nlogger.info("This is info");\nlogger.warn("This is warn");\nlogger.error("This is error");\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Output:")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/deepakshrma/deno-by-example/master/static/img/logger_sample_01.png",alt:"sample 1"}))),Object(o.b)("p",null,"If you notice, I am using ",Object(o.b)("inlineCode",{parentName:"p"},"sprintf")," before using ",Object(o.b)("inlineCode",{parentName:"p"},"printf"),". Since I want the full control on the printing message like adding colors and using the dynamic format. I have to use ",Object(o.b)("inlineCode",{parentName:"p"},"sprintf")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"printf"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Let's allow the user to modify format at runtime:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{7-10,14-17,21-24,28-31}","{7-10,14-17,21-24,28-31}":!0}),'const initialOptions = { level: 0, format: "%s\\n" };\nclass Logger {\n  private _level: LogLevel;\n  private _format: string;\n  /// rest of the code\n  log(format: string, ...messages: unknown[]) {\n    if (messages.length === 0) {\n      messages = [format];\n      format = this.format;\n    }\n    printf(gray(sprintf(format, ...messages)));\n  }\n  info(format: string, ...messages: unknown[]) {\n    if (messages.length === 0) {\n      messages = [format];\n      format = this.format;\n    }\n    printf(cyan(sprintf(format, ...messages)));\n  }\n  warn(format: string, ...messages: unknown[]) {\n    if (messages.length === 0) {\n      messages = [format];\n      format = this.format;\n    }\n    printf(yellow(sprintf(format, ...messages)));\n  }\n  error(format: string, ...messages: unknown[]) {\n    if (messages.length === 0) {\n      messages = [format];\n      format = this.format;\n    }\n    printf(red(sprintf(format, ...messages)));\n  }\n}\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Sample Run2:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import { Logger } from "./logger.ts";\n\nconst logger = new Logger({ level: 0, format: "Logger: %s" });\nlogger.log("This is log message");\nlogger.warn("This is warn");\n\nlogger.log(\n  "Overridden Info- Method: //%s %s [response time]: %05f ms",\n  "POST",\n  "https://www.google.com",\n  100\n);\nlogger.error(\n  "Overridden Error- Error: //%s",\n  new Error("This is error").message\n);\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Output:")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/deepakshrma/deno-by-example/master/static/img/logger_sample_022.png",alt:"sample 2"}))),Object(o.b)("h4",{id:"final-touch-use-of-log-levels"},"Final Touch: Use of log levels"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:"{7}","{7}":!0}),'const initialOptions = { level: 0, format: "%s\\n" };\nclass Logger {\n  private _level: LogLevel;\n  private _format: string;\n  /// rest of the code\n  log(format: string, ...messages: unknown[]) {\n    if (this.level > 0) return;\n\n    if (messages.length === 0) {\n      messages = [format];\n      format = this.format;\n    }\n    printf(gray(sprintf(format, ...messages)));\n  }\n  /// rest of the code\n}\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Final Run:")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import { Logger } from "./logger.ts";\n\nconst logger = new Logger({ level: 0, format: "Logger: %s" });\nlogger.log("This is log message");\nlogger.warn("This is warn");\n\nlogger.log(\n  "Overridden Info- Method: //%s %s [response time]: %05f ms",\n  "POST",\n  "https://www.google.com",\n  100\n);\nlogger.error(\n  "Overridden Error- Error: //%s",\n  new Error("This is error").message\n);\n\n// Change level\n\nlogger.level = 2;\n\n// This will not print\nlogger.log(\n  "Overridden Info- Method: //%s %s [response time]: %05f ms",\n  "POST",\n  "https://www.google.com",\n  100\n);\n\n// This will print\nlogger.error(\n  "Overridden Error- Error: //%s",\n  new Error("This is error").message\n);\n\n// Change default format\nlogger.level = 1;\n\nlogger.format = "This is something new version: v%s";\n\nlogger.info("1.0.1");\nlogger.info("1.0.2");\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Output:")),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://raw.githubusercontent.com/deepakshrma/deno-by-example/master/static/img/logger_sample_03.png",alt:"sample 3"}))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Good Job")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Nice! Well done! We have done it!!"))),Object(o.b)("p",null,Object(o.b)("img",Object(a.a)({parentName:"p"},{src:"https://sayingimages.com/wp-content/uploads/you-did-good-job-meme.jpg",alt:"good job"}))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),Object(o.b)("strong",{parentName:"h5"},"The entire implementation of ",Object(o.b)("inlineCode",{parentName:"strong"},"Logger class")," can be found in"))),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/deepakshrma/deno-by-example/blob/master/examples/logger.ts"}),"examples/logger.ts")))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),Object(o.b)("strong",{parentName:"h5"},"How to use sample can be found in"))),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/deepakshrma/deno-by-example/blob/master/examples/advance_logger.ts"}),"examples/advance_logger.ts")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"For more examples like this, visit:\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://deepakshrma.github.io/deno-by-example/"}),"https://deepakshrma.github.io/deno-by-example/"))),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"I hope you like this tutorial. let me know your feedback in the comment. Please support(\ud83d\ude4f\ud83d\ude4f) by subscribing and clapping on ",Object(o.b)("a",Object(a.a)({parentName:"em"},{href:"https://medium.com/@deepak_v"}),"https://medium.com/@deepak_v"),".")))}b.isMDXComponent=!0},156:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.a.createElement(g,i(i({ref:t},c),{},{components:n})):r.a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);